#############################################################################
##
#W Makefile                                                 Laurent Bartholdi
##
#H   @(#)$Id$
##
#Y Copyright (C) 2007, Laurent Bartholdi
##
#############################################################################
##
##  This compiles the C/Java modules, creates archives, or
##  compiles the documentation
##
#############################################################################

.PHONY: all doc clean distribute mrproper wwwdir checkblocks tarballs

LOCALBIN=bin/@GAPARCH@
EXTERN=$(CURDIR)/bin/@GAPARCH@/extern
LEVMAR=extern/levmar-2.6
LIBDOGLEG=extern/Oblong-libdogleg-d48618c

MYCC=./libtool --mode=compile @CC@ $(CFLAGS) @CFLAGS@ @GAP_CPPFLAGS@ -std=c99 -g -Wall
MYLD=./libtool --mode=link @CC@ $(CFLAGS) -g
JAVAC=@JAVAC@

all: $(LOCALBIN) @LIB_TARGET@ $(LOCALBIN)/fr_dll.so @JAVABUILD@

lib: liblevmar libdogleg


liblevmar:
	mkdir -p $(EXTERN)/include $(EXTERN)/lib
	if [ ! -f $(EXTERN)/include/levmar.h ]; then \
		$(MAKE) -C $(LEVMAR) liblevmar.a CONFIGFLAGS=-fPIC; \
		cp $(LEVMAR)/liblevmar.a $(EXTERN)/lib/; \
		cp $(LEVMAR)/levmar.h $(EXTERN)/include/; \
	fi


info:
	echo @INCLGMP@
	echo @GMP_CFLAGS@


extern/$(GSLLIB).tar.gz:
	echo "I can't find $(GSLLIB), so I'm going to download it"
	(cd extern; wget --no-verbose http://ftpmirror.gnu.org/gsl/$(GSLLIB).tar.gz)

extern/$(GIVAROLIB).tar.gz:
	echo "I can't find $(GIVAROLIB), so I'm going to download it"
	(cd extern; wget --no-verbose --no-check-certificate https://forge.imag.fr/frs/download.php/202/$(GIVAROLIB).tar.gz)

gsllib: extern/$(GSLLIB).tar.gz
	if ! test -r $(EXTERN)/include/gsl/gsl_vector.h; then \
	    cd extern && \
	    rm -rf $(GSLLIB) && \
	    tar -x -f $(GSLLIB).tar.gz -z && \
	    cd $(GSLLIB) && \
	    ./configure --prefix=$(EXTERN) CFLAGS="$(CFLAGS) @c_options@" && \
	    $(MAKE) && \
	    $(MAKE) install; \
	fi

libdogleg:
	mkdir -p $(EXTERN)/include $(EXTERN)/lib
	if [ ! -f $(EXTERN)/include/dogleg.h ]; then \
		$(MAKE) -C $(LIBDOGLEG); \
		cp $(LIBDOGLEG)/libdogleg.* $(EXTERN)/lib/; \
		cp $(LIBDOGLEG)/dogleg.h $(EXTERN)/include/; \
	fi

hurwitz:
	$(MAKE) -C $@

distribute: wwwdir doc tarballs

$(LOCALBIN):
	mkdir -p $(LOCALBIN)

$(LOCALBIN)/rpoly.lo: src/rpoly.c src/poly.h
	$(MYCC) -c $< -o $@


$(LOCALBIN)/p1.lo: src/p1.c src/cpoly.C src/fr_dll.h
	$(MYCC) -c $< -o $@ -DCONFIG_H

$(LOCALBIN)/fr_dll.lo: src/fr_dll.c src/cpoly.C src/fr_dll.h
	$(MYCC) -c $< -o $@ @LEVMAR_CFLAGS@ -DCONFIG_H

$(LOCALBIN)/fr_dll.so: $(LOCALBIN)/fr_dll.lo $(LOCALBIN)/rpoly.lo $(LOCALBIN)/p1.lo
	$(MYLD) -module -o $(LOCALBIN)/fr_dll.la $+ @LEVMAR_LDFLAGS@ @LEVMAR_LIBS@ -rpath $(PWD)/$(LOCALBIN)
	cp $(LOCALBIN)/.libs/fr_dll.so $@

#$(LOCALBIN)/p1.o: src/p1.c src/cpoly.C src/fr_dll.h
#	$(CC) -c $< -o $@ -I@GAPDIR@ -I@GAPDIR@/$(LOCALBIN) @GMP_CFLAGS@ -DCONFIG_H

#$(LOCALBIN)/fr_dll.o: src/fr_dll.c src/cpoly.C src/fr_dll.h
#	$(CC) -c $< -o $@ -I@GAPDIR@ -I@GAPDIR@/$(LOCALBIN) @GMP_CFLAGS@ -DCONFIG_H

#$(LOCALBIN)/findrat.o: src/findrat.c src/fr_dll.h
#	$(CC) -c $< -o $@ -I@GAPDIR@ -I@GAPDIR@/$(LOCALBIN) @GMP_CFLAGS@ -DCONFIG_H

#$(LOCALBIN)/fr_dll.so: $(LOCALBIN)/fr_dll.o $(LOCALBIN)/findrat.o $(LOCALBIN)/rpoly.o $(LOCALBIN)/p1.o
#	$(GAC) -d -o $@ $+ @GACFLAGS@


java/javaplot.class: src/javaplot.java
	$(JAVAC) -cp java/javaview.jar $< -d java

java/javaview.jar:
	wget --no-verbose -O javaview.zip http://www.javaview.de/download/data/javaview.zip
	unzip -j -d java javaview.zip jars/javaview.jar
	rm -f javaview.zip

clean:
	rm -rf .version config.log $(LOCALBIN) `find doc -type l`


mrproper: clean
	rm Makefile


configure: cnf/Makefile.in cnf/configure.ac
	(cd cnf; aclocal -Im4; autoconf; mv -f configure ..)


.version: PackageInfo.g
	grep '^Version :=' $< | awk -F'"' '{print $$2}' > $@

doc: doc/chap0.html

doc/chap0.html: doc/fr.xml doc/frbib.xml gap/algebra.gd gap/frelement.gd \
	gap/group.gd gap/img.gd gap/perlist.gd gap/vector.gd gap/examples.gd \
	gap/frmachine.gd gap/helpers.gd gap/mealy.gd gap/trans.gd
	echo 'LoadPackage("fr"); DOC@FR();' | @GAP_EXEC@ -r -q
	(cd doc; git add *.html manual.pdf manual.css; git commit -m 'New html files'; git push github master:gh-pages)

checkblocks:
	grep '<#GAPDoc' PackageInfo.g gap/*d | awk -F'"' '{print $$2}' | sort > @@-blocks
	grep '<#Include' doc/fr.xml | awk -F'"' '{print $$2}' | sort > @@-in
	comm -3 @@-blocks @@-in
	@rm @@-blocks @@-in

tarballs: .version doc
	mkdir -p www
	tar -c -f - --exclude '*~' --exclude 'config.[ls]*' --exclude 'fr/Makefile*' --exclude .cvsignore --exclude autom4te.cache --exclude sandbox --exclude www --exclude bin --exclude 'extern/[a-z]*' --exclude CVS --exclude .version -C .. fr | (cd www; tar -x -f -)
	tar -c -f www/fr-`cat .version`.tar.gz -z -C www fr
	ln -sf fr-`cat .version`.tar.gz www/fr.tar.gz

#E Makefile . . . . . . . . . . . . . . . . . . . . . . . . . . . ends here
